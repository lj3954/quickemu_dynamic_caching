name: Gather Windows URLs

on:
  schedule:
    - cron: "30 12 * * *"
  workflow_dispatch:
  repository_dispatch:
    types: [windows_urls]

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: target/release/create_windows_matrix
          key: ${{ runner.os }}-create_windows_matrix-${{ hashFiles('Cargo.lock') }}

      - id: generate-matrix
        run: |
          matrix="$(./target/release/create_windows_matrix)"
          echo "matrix=${matrix}" >> $GITHUB_OUTPUT

  cache_windows_urls:
    needs: setup-matrix
    strategy:
      matrix:
        include: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: target/release/get_windows_urls
          key: ${{ runner.os }}-get_windows_urls-${{ hashFiles('Cargo.lock') }}

      - id: get-data
        run: |
          ARGS=(
            --release "${{ matrix.release }}" \
            --arch "${{ matrix.arch }}" \
            --language "${{ matrix.language }}" \
            --referer "${{ matrix.referer }}" \
            --sku "${{ matrix.sku }}" \
            --product-edition-id "${{ matrix.product_edition_id }}"
          )
          if [ "${{ matrix.checksum }}" != "null" ]; then
            ARGS+=(--checksum "${{ matrix.checksum }}")
          fi

          JSON_OUTPUT="$(./target/release/get_windows_urls "${ARGS[@]}")"

          EXPIRATION="$(echo "${JSON_OUTPUT}" | jq -rc .expiration)"
          DATA="$(echo "${JSON_OUTPUT}" | jq -rc .result)"
          
          echo "expiration=${EXPIRATION}" >> $GITHUB_OUTPUT
          echo "data=${DATA}" >> $GITHUB_OUTPUT

      - name: Populate KV
        uses: zentered/cloudflare-kv-action@v1.0.1
        env:
          CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }} 
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        with:
          namespace_identifier: ${{ secrets.CLOUDFLARE_NAMESPACE_ID }}
          key_name: windows-${{ matrix.sku }}
          value: ${{ steps.get-data.outputs.data }}
          expiration: ${{ steps.get-data.outputs.expiration }}
